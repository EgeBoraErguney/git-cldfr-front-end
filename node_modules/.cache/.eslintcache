[{"/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/index.js":"1","/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/App.js":"2","/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/reportWebVitals.js":"3","/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/components/HomeComponent.js":"4","/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/components/PostComponent.js":"5"},{"size":500,"mtime":1636103323039,"results":"6","hashOfConfig":"7"},{"size":575,"mtime":1636198850312,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1636103323040,"results":"9","hashOfConfig":"7"},{"size":3907,"mtime":1636234812214,"results":"10","hashOfConfig":"7"},{"size":2554,"mtime":1636234320497,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1bcnelj",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/index.js",[],["24","25"],"/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/App.js",["26"],"import \"./App.css\";\nimport \"./components/HomeComponent.js\";\nimport HomeComponent from \"./components/HomeComponent.js\";\nimport PostComponent from \"./components/PostComponent.js\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter,Routes,Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<HomeComponent />}/>\n          <Route path=\"/posts/:post\" element={<PostComponent />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/reportWebVitals.js",[],"/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/components/HomeComponent.js",["27","28","29","30","31","32"],"/Users/egeerguney/Desktop/Cloudflare/git-cldfr-front-end/src/components/PostComponent.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":5,"column":10,"nodeType":"39","messageId":"40","endLine":5,"endColumn":16},{"ruleId":"37","severity":1,"message":"41","line":1,"column":31,"nodeType":"39","messageId":"40","endLine":1,"endColumn":37},{"ruleId":"37","severity":1,"message":"42","line":8,"column":3,"nodeType":"39","messageId":"40","endLine":8,"endColumn":6},{"ruleId":"37","severity":1,"message":"43","line":19,"column":10,"nodeType":"39","messageId":"40","endLine":19,"endColumn":25},{"ruleId":"37","severity":1,"message":"44","line":19,"column":27,"nodeType":"39","messageId":"40","endLine":19,"endColumn":45},{"ruleId":"45","severity":1,"message":"46","line":26,"column":6,"nodeType":"47","endLine":26,"endColumn":17,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":62,"column":7,"nodeType":"51","endLine":62,"endColumn":71},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'Box' is defined but never used.","'skipFirstRender' is assigned a value but never used.","'setSkipFirstRender' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postModalOpen'. Either include it or remove the dependency array. You can also do a functional update 'setPostModalOpen(p => ...)' if you only need 'postModalOpen' in the 'setPostModalOpen' call.","ArrayExpression",["54"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [modalPost, postModalOpen]",{"range":"57","text":"58"},[686,697],"[modalPost, postModalOpen]"]